# LimaWAN Sample Configuration
# Lima VM config with known static IP for consistent port forwarding

# VM Configuration
vmType: "qemu"
os: "Linux"
arch: "x86_64"

# Images - specify the OS image to use
images:
  - location: "https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-arm64.img"
    arch: "aarch64"

# Resource allocation
cpus: 2
memory: "2GiB"
disk: "10GiB"

# Disable container runtime (not needed for port forwarding)
containerd:
  system: false
  user: false

# Disable additional services to speed up startup
# This skips the optional requirements that cause delays
env:
  LIMA_IGNORE_OPTIONAL_REQUIREMENTS: "true"

# Network configuration
networks:
  - lima: "shared"

# SSH configuration
ssh:
  localPort: 0
  loadDotSSHPubKeys: true
  forwardAgent: false
  forwardX11: false



# Firmware and hardware
firmware:
  legacyBIOS: false
  
video:
  display: "none"
  
audio:
  device: "none"

# Mounts
mounts:
  - location: "~"
    writable: true
    9p:
      securityModel: "mapped-xattr"
      cache: "mmap"
  - location: "/tmp/lima"
    writable: true

# Provision scripts for system setup
provision:
  # System configuration and package installation
  - mode: system
    script: |
      #!/bin/bash
      set -eux
      
      # Update system
      apt-get update
      apt-get upgrade -y
      
      # Install required packages
      apt-get install -y \
        curl \
        wget \
        git \
        vim \
        htop \
        net-tools \
        openssh-server \
        ufw \
        fail2ban \
        nginx \
        unattended-upgrades
      
      # Configure network with static IP
      cat > /etc/netplan/50-cloud-init.yaml << 'EOF'
      network:
        version: 2
        ethernets:
          enp0s1:
            addresses:
              - 192.168.105.10/24
            gateway4: 192.168.105.1
            nameservers:
              addresses:
                - 1.1.1.1
                - 8.8.8.8
            dhcp4: false
            optional: true
      EOF
      
      netplan generate
      netplan apply
      
      # Configure SSH daemon
      sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/#ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
      sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config
      sed -i 's/#MaxAuthTries 6/MaxAuthTries 3/' /etc/ssh/sshd_config
      sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 300/' /etc/ssh/sshd_config
      sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 2/' /etc/ssh/sshd_config
      
      systemctl restart ssh
      
      # Configure UFW firewall
      ufw --force enable
      ufw allow ssh
      ufw allow 22/tcp
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw default deny incoming
      ufw default allow outgoing
      
      # Configure fail2ban
      cat > /etc/fail2ban/jail.local << 'EOF'
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 3
      
      [sshd]
      enabled = true
      port = ssh
      logpath = %(sshd_log)s
      backend = %(sshd_backend)s
      EOF
      
      systemctl enable fail2ban
      systemctl start fail2ban
      
      # Configure nginx
      systemctl enable nginx
      systemctl start nginx
      
      # Create a simple index page
      echo "<h1>LimaWAN VM</h1><p>VM IP: 192.168.105.10</p><p>Access successful!</p>" > /var/www/html/index.html
      
      # Configure automatic updates
      dpkg-reconfigure -plow unattended-upgrades
      
      # Configure kernel parameters for security
      cat >> /etc/sysctl.conf << 'EOF'
      # Network security
      net.ipv4.ip_forward = 0
      net.ipv4.conf.all.send_redirects = 0
      net.ipv4.conf.default.send_redirects = 0
      net.ipv4.conf.all.accept_source_route = 0
      net.ipv4.conf.default.accept_source_route = 0
      net.ipv4.conf.all.accept_redirects = 0
      net.ipv4.conf.default.accept_redirects = 0
      net.ipv4.conf.all.secure_redirects = 0
      net.ipv4.conf.default.secure_redirects = 0
      net.ipv4.conf.all.log_martians = 1
      net.ipv4.conf.default.log_martians = 1
      net.ipv4.icmp_echo_ignore_broadcasts = 1
      net.ipv4.icmp_ignore_bogus_error_responses = 1
      net.ipv4.tcp_syncookies = 1
      EOF
      
      sysctl -p
      
      # Set up system limits
      echo "* soft nofile 65536" >> /etc/security/limits.conf
      echo "* hard nofile 65536" >> /etc/security/limits.conf
      
      # Set hostname
      hostnamectl set-hostname limawan-vm
      
      # Network optimization
      echo 'net.core.rmem_max = 16777216' >> /etc/sysctl.conf
      echo 'net.core.wmem_max = 16777216' >> /etc/sysctl.conf
      echo 'net.ipv4.tcp_rmem = 4096 65536 16777216' >> /etc/sysctl.conf
      echo 'net.ipv4.tcp_wmem = 4096 65536 16777216' >> /etc/sysctl.conf
      sysctl -p
      
      echo "LimaWAN VM setup complete"

  # User configuration
  - mode: user
    script: |
      #!/bin/bash
      set -eux
      
      # Add SSH key if provided
      if [ -n "${SSH_PUBLIC_KEY:-}" ]; then
        mkdir -p ~/.ssh
        echo "${SSH_PUBLIC_KEY}" >> ~/.ssh/authorized_keys
        chmod 600 ~/.ssh/authorized_keys
        chmod 700 ~/.ssh
      fi
      
      echo "User configuration complete"

# Probes are disabled to speed up startup
# Custom health checks can be run manually after VM is ready

# Message to display when VM is ready
message: |
  To set up SSH access to this VM:
  ------------------------------
  
  1. Get the VM IP address (dynamically assigned via DHCP):
     VM_IP=$(tools/get_vm_ip.sh -q)
     echo "VM IP: $VM_IP"
  
  2. SSH is configured for key-based authentication only
  
  3. To set up port forwarding:
     sudo scripts/setup_pf_forwarding.sh -v $VM_IP -i 22 -e 2222
  
  4. Test SSH access:
     ssh -p 2222 $USER@localhost
  
  Security features enabled:
  - fail2ban for intrusion detection
  - UFW firewall with restrictive rules
  - SSH hardening (key-only, no root)
  - Network security parameters
  
  LimaWAN VM is ready for secure internet exposure! 