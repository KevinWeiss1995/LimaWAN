[project]
name = "LimaWAN"
description = """
Expose Lima VMs on macOS to the public internet using
macOS Packet Filter (PF) port forwarding. LimaWAN enables secure,
configurable WAN access to services running inside Lima VMs â€” no tap,
no bridge, no kexts required.
"""
target_audience = ["self-hosters", "developers", "sysadmins", "infra engineers"]
platforms = ["macOS 12+", "Lima >= 0.15"]
requires_root = true
threat_model = "Host system is exposed to WAN traffic; input validation, rate limiting, and service hardening must be respected."

[goals]
- "Expose Lima VM ports (e.g. SSH, HTTP) to WAN traffic using macOS PF"
- "Avoid requiring custom TAP devices or kernel extensions"
- "Automate PF configuration safely and reproducibly"
- "Provide easy provisioning of VMs with known IPs or static config"
- "Support diagnostics and health checks from host"
- "Support scripting or CLI usage for repeatable setups"
- "Optional LaunchDaemon to persist PF rules across reboot"
- "Clear documentation for router or cloud port forwarding to macOS"

[non_goals]
- "Bridged networking or L2 broadcast passthrough"
- "Custom VPN or VLAN support"
- "Multi-VM reverse proxy load balancing (can be future work)"

[project_structure]
- README.md                 # Full walkthrough of setup, risks, and examples
- LICENSE                   # MIT by default
- scripts/
    - setup_pf_forwarding.sh       # Core logic: sets up port forwarding via PF
    - teardown_pf_forwarding.sh    # Cleanly disables PF rules
    - enable_pf.sh                 # Reloads PF config and checks status
    - diagnostics.sh               # Verifies port forwarding and connectivity
- plists/
    - org.limawan.firewall.plist   # Optional: enable PF rules at boot via launchd
- samples/
    - lima.yaml                    # Minimal VM config with known static IP
    - pf.conf.append               # PF anchor content to be injected
- test/
    - test_pf_rules.sh            # Validate PF syntax, dry-run, simulate traffic
    - test_ssh_access.sh          # Optional e2e test for SSH forwarding
- tools/
    - gen_anchor.sh               # CLI to generate rule snippets
    - show_config.sh              # Debug view of current forwarding rules

[naming]
snake_case = true
avoid_abbreviations = true
scripts_prefix = "limawan_"
vm_hostname_pattern = "limawan-*"

[style:bash]
require_set_euo_pipefail = true
quote_variable_expansions = always
prefer_long_flags = true
allow_default_env_overrides = true

[style:yaml]
indentation = 2
strict_schema = true
explicit_ports = true

[networking]
default_host_interface = "en0"
default_vm_ip = "192.168.105.10"
default_vm_ports = [22, 80, 443]
external_port_range = "1024-65535"

[pf]
anchor_path = "/etc/pf.anchors/limawan"
main_conf_path = "/etc/pf.conf"
pfctl_flags = "-f /etc/pf.conf"
validate_pf_on_reload = true
include_auto_anchor = true
auto_anchor_name = "limawan"
allow_reload_without_disconnect = true
pf_conf_backup_path = "/etc/pf.conf.bak"

[testing]
include_unit_tests = true
include_integration_tests = true
shellcheck_required = true
pfctl_dry_run_check = true
test_mode_vm_port = 2222

[security]
document_wan_exposure = true
warn_on_insecure_ports = [22, 80]
require_anchor_path_absolute = true
require_sudo_to_write_pf_conf = true
optional_fail2ban_or_rate_limit_docs = true
include_hardening_notes = true

[documentation]
readme_sections = [
  "Overview",
  "Why Not Bridged?",
  "Security Implications",
  "Getting Started",
  "Exposing SSH to WAN",
  "Exposing HTTP to WAN",
  "Restoring Default PF Config",
  "Troubleshooting",
  "FAQ"
]
include_ascii_arch_diagram = true
include_router_forwarding_example = true
warn_about_cloud_nat_and_dynamic_ips = true

